# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2020-08-04 11:37
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=16)),
                ('content', tinymce.models.HTMLField()),
                ('add_time', models.DateTimeField(auto_now_add=True)),
                ('likes_num', models.IntegerField(default=0)),
                ('comments_num', models.IntegerField(default=0, null=True)),
                ('collects_num', models.IntegerField(default=0)),
                ('read_num', models.IntegerField(default=0, null=True)),
                ('hot', models.DecimalField(decimal_places=4, default=0, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=100)),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.Article')),
            ],
        ),
        migrations.CreateModel(
            name='ArticleTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('add_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlogLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_id', models.IntegerField()),
                ('have_label', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChatContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=256)),
                ('message_time', models.DateTimeField(auto_now_add=True)),
                ('message_type', models.IntegerField()),
                ('have_read', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_id', models.IntegerField()),
                ('receiver_id', models.IntegerField()),
                ('sender_unread_num', models.IntegerField(default=0, null=True)),
                ('receiver_unread_num', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Discussion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32)),
                ('content', tinymce.models.HTMLField()),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('comments_num', models.IntegerField(default=0, null=True)),
                ('last_comment_time', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DiscussionLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discussion_id', models.IntegerField()),
                ('have_label', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DiscussionResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', tinymce.models.HTMLField()),
                ('likes_num', models.IntegerField(default=0)),
                ('add_time', models.DateTimeField(auto_now_add=True)),
                ('discussion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.Discussion')),
            ],
        ),
        migrations.CreateModel(
            name='DiscussionTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('add_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='LikeArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_id', models.IntegerField()),
                ('fan_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='LikeDiscussion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discussion_id', models.IntegerField()),
                ('fan_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='LikeDiscussionResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_id', models.IntegerField()),
                ('fan_id', models.IntegerField()),
                ('add_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Likes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star_id', models.IntegerField()),
                ('fan_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MarkArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_id', models.IntegerField()),
                ('fan_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MarkDiscussion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discussion_id', models.IntegerField()),
                ('fan_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver_id', models.IntegerField()),
                ('message_type', models.IntegerField()),
                ('have_read', models.IntegerField(default=0)),
                ('article', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app1.Article')),
                ('article_comment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app1.ArticleComment')),
                ('discussion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app1.Discussion')),
                ('discussion_response', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app1.DiscussionResponse')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, unique=True)),
                ('password', models.CharField(max_length=256)),
                ('mail', models.CharField(max_length=32, null=True)),
                ('add_time', models.DateTimeField(auto_now_add=True)),
                ('icon', models.ImageField(default='icons/2020/03/default.jpg', null=True, upload_to='icons/%Y/%m')),
                ('sex', models.IntegerField(default=0)),
                ('motto', models.CharField(max_length=128, null=True)),
                ('fans_num', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ReadArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_id', models.IntegerField(default=0, null=True)),
                ('reader_id', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserBlogLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_id', models.IntegerField()),
                ('label_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UserDiscussionLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discussion_id', models.IntegerField()),
                ('label_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UserLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.Person')),
            ],
        ),
        migrations.AddField(
            model_name='notice',
            name='sender',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app1.Person'),
        ),
        migrations.AddField(
            model_name='discussiontag',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.Person'),
        ),
        migrations.AddField(
            model_name='discussionresponse',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.Person'),
        ),
        migrations.AddField(
            model_name='discussion',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.Person'),
        ),
        migrations.AddField(
            model_name='discussion',
            name='tag',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app1.DiscussionTag'),
        ),
        migrations.AddField(
            model_name='chatcontent',
            name='message_room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.ChatRoom'),
        ),
        migrations.AddField(
            model_name='articletag',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.Person'),
        ),
        migrations.AddField(
            model_name='articlecomment',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.Person'),
        ),
        migrations.AddField(
            model_name='article',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app1.Person'),
        ),
        migrations.AddField(
            model_name='article',
            name='tag',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app1.ArticleTag'),
        ),
    ]
